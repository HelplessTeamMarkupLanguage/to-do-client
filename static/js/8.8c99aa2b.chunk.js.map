{"version":3,"sources":["axios.js","containers/LoginPage/LoginPage.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","common","loginStyle","makeStyles","theme","header","top","marginBottom","color","textAlign","card","maxWidth","margin","spacing","breakpoints","up","marginTop","textField","width","submitButton","float","marginRight","clearButton","buttonHolder","registration","position","fontSize","textDecoration","LoginPage","props","useState","username","setUsername","password","setPassword","snackBarOpen","setSnackBarOpen","classes","submitLogin","a","post","then","res","setItem","data","history","push","catch","err","console","error","className","value","onChange","event","target","label","type","variant","onClick","disabled","length","to","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message"],"mappings":"oHAAA,aAEMA,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,qCAGXH,EAASI,aAAaC,QAAQC,KAAI,SAACC,GACjC,IAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACFD,EAAOI,QAAQC,OAAf,+BAAmDJ,IAE9CD,KAGMP,O,0MCRTa,EAAaC,aAAW,SAACC,GAAD,YAAY,CACxCC,OAAQ,CACNC,IAAK,KACLC,aAAc,MACdC,MAAO,UACPC,UAAW,UAEbC,MAAI,GACFC,SAAU,IACVC,OAAQR,EAAMS,QAAQ,IAFpB,cAGDT,EAAMU,YAAYC,GAAG,KAAO,CAAEH,OAAQ,OAAQI,UAAWZ,EAAMS,QAAQ,KAHtE,wBAIO,QAJP,8BAKa,UALb,GAOJI,UAAW,CACTC,MAAO,MACPN,OAAQR,EAAMS,QAAQ,GACtBN,aAAc,GAEhBY,aAAc,CACZC,MAAO,QACPJ,UAAWZ,EAAMS,QAAQ,GACzBN,aAAcH,EAAMS,QAAQ,GAC5BQ,YAAa,MAEfC,YAAa,CACXF,MAAO,QACPR,OAAQR,EAAMS,QAAQ,IAExBU,aAAc,CACZP,UAAW,GACXE,MAAO,QAETM,aAAc,CACZN,MAAO,OACPO,SAAU,SACVC,SAAU,GACVjB,UAAW,SACXO,UAAW,GACXR,MAAO,UACP,MAAO,CACLA,MAAO,UACPmB,eAAgB,QAElB,YAAa,CACXA,eAAgB,kBAKP,SAASC,EAAUC,GAAQ,IAAD,EACPC,mBAAS,IADF,mBAChCC,EADgC,KACtBC,EADsB,OAEPF,mBAAS,IAFF,mBAEhCG,EAFgC,KAEtBC,EAFsB,OAGCJ,oBAAS,GAHV,mBAGhCK,EAHgC,KAGlBC,EAHkB,KAIjCC,EAAUnC,IAEVoC,EAAW,uCAAG,sBAAAC,EAAA,sEACZjD,IACHkD,KAAK,cAAe,CAAET,WAAUE,aAChCQ,MAAK,SAACC,GACL5C,aAAa6C,QAAQ,QAASD,EAAIE,KAAK/C,OACvCgC,EAAMgB,QAAQC,KAAK,aAEpBC,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdZ,GAAgB,MATF,2CAAH,qDAajB,OACE,qCACE,oBAAIe,UAAWd,EAAQhC,OAAvB,mBACA,eAAC,IAAD,CAAM8C,UAAWd,EAAQ3B,KAAzB,UACE,cAAC,IAAD,CACEyC,UAAWd,EAAQpB,UACnBmC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAWtB,EAAYsB,EAAMC,OAAOH,QAC9CI,MAAM,aAER,cAAC,IAAD,CACEL,UAAWd,EAAQpB,UACnBmC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAWpB,EAAYoB,EAAMC,OAAOH,QAC9CI,MAAM,WACNC,KAAK,aAEP,sBAAKN,UAAWd,EAAQd,aAAxB,UACE,cAAC,IAAD,CACE4B,UAAWd,EAAQlB,aACnBuC,QAAQ,YACRlD,MAAM,UACNmD,QAAS,kBAAMrB,KACfsB,SAAU7B,EAAS8B,OAAS,GAAK5B,EAAS4B,OAAS,EALrD,oBASA,cAAC,IAAD,CACEV,UAAWd,EAAQf,YACnBoC,QAAQ,WACRlD,MAAM,UACNmD,QAAS,WACP3B,EAAY,IACZE,EAAY,KANhB,sBAaF,qBAAIiB,UAAWd,EAAQb,aAAvB,yBACc,cAAC,IAAD,CAASsC,GAAG,gBAAZ,iCAGhB,cAAC,IAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,KAAM/B,EACNgC,iBAAkB,IAClBC,QAAS,kBAAMhC,GAAgB,IAC/BiC,QAAQ","file":"static/js/8.8c99aa2b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://to-do-798.herokuapp.com/',\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default instance;\r\n","import { Button, Card, makeStyles, Snackbar, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from '../../axios';\r\n\r\nconst loginStyle = makeStyles((theme) => ({\r\n  header: {\r\n    top: '2%',\r\n    marginBottom: '1em',\r\n    color: '#274e6c',\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    maxWidth: 500,\r\n    margin: theme.spacing(2),\r\n    [theme.breakpoints.up(550)]: { margin: 'auto', marginTop: theme.spacing(2) },\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  textField: {\r\n    width: '90%',\r\n    margin: theme.spacing(2),\r\n    marginBottom: 0,\r\n  },\r\n  submitButton: {\r\n    float: 'right',\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginRight: '8%',\r\n  },\r\n  clearButton: {\r\n    float: 'right',\r\n    margin: theme.spacing(1),\r\n  },\r\n  buttonHolder: {\r\n    marginTop: 20,\r\n    width: '100%',\r\n  },\r\n  registration: {\r\n    width: '100%',\r\n    position: 'static',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    color: '#274e6c',\r\n    '& a': {\r\n      color: '#de7a22',\r\n      textDecoration: 'none',\r\n    },\r\n    '& a:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LoginPage(props) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n  const classes = loginStyle();\r\n\r\n  const submitLogin = async () => {\r\n    await axios\r\n      .post('/user/login', { username, password })\r\n      .then((res) => {\r\n        localStorage.setItem('token', res.data.token);\r\n        props.history.push('/todos');\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setSnackBarOpen(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={classes.header}>Login</h1>\r\n      <Card className={classes.card}>\r\n        <TextField\r\n          className={classes.textField}\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n          label=\"Username\"\r\n        ></TextField>\r\n        <TextField\r\n          className={classes.textField}\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n        ></TextField>\r\n        <div className={classes.buttonHolder}>\r\n          <Button\r\n            className={classes.submitButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => submitLogin()}\r\n            disabled={username.length < 1 || password.length < 6}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className={classes.clearButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setUsername('');\r\n              setPassword('');\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n\r\n        <h4 className={classes.registration}>\r\n          New Member? <NavLink to=\"/registration\">Register here</NavLink>\r\n        </h4>\r\n      </Card>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={snackBarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackBarOpen(false)}\r\n        message=\"Incorrect username and password\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}