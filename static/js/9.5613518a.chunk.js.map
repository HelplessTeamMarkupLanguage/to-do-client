{"version":3,"sources":["axios.js","components/ToDoCard/ToDoCard.js","components/AddToDoDialog/AddToDoDialog.js","components/NoDataFound/NoDataFound.js","containers/ToDoList/ToDoList.js"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","common","toDoCardStyle","makeStyles","theme","card","position","backgroundColor","props","isFinished","color","height","padding","marginBottom","spacing","display","width","justifyContent","alignSelf","margin","textDecoration","breakpoints","down","fontSize","up","buttonsHolder","alignItems","mainSection","flexFlow","maxWidth","ToDoCard","useState","setIsFinished","date","Date","toLocaleString","month","getDate","getFullYear","classes","Card","root","className","message","IconButton","onClick","handleFinishToDo","Replay","Check","handleDeleteToDo","Delete","dialogStyle","dialog","textAlign","boxSizing","flexDirection","minWidth","dialogHeader","buttonRoot","marginTop","datePicker","addToDoDialog","Dialog","open","onClose","handleCloseDialog","paper","DialogTitle","Close","TextField","id","label","multiline","value","toDoMessage","onChange","handleToDoMessageChange","rowsMax","utils","DateFnsUtils","selectedDate","handleDateChange","format","Button","variant","handleAddToDo","disabled","noDataStyle","noDataFound","toDoListStyle","toDoList","header","top","fabButton","bottom","right","ToDoList","toDos","setTodoList","setOpen","setSelectedDate","setToDoMessage","isLoading","setIsLoading","isChanged","setIsChanged","fetchToDoList","a","get","then","res","data","catch","error","console","useEffect","cleanDialog","LoadingSpinner","text","length","NoDataFound","map","todo","_id","delete","log","toDo","put","find","Fab","Add","AddToDoDialog","event","target","post"],"mappings":"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","file":"static/js/9.5613518a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://to-do-798.herokuapp.com/',\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default instance;\r\n","import { Card, IconButton, makeStyles } from '@material-ui/core';\r\nimport { Check, Delete, Replay } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\n\r\nconst toDoCardStyle = makeStyles((theme) => ({\r\n  card: {\r\n    position: 'relative',\r\n    backgroundColor: (props) => (!props.isFinished ? '#274e6c' : '#79a9ce'),\r\n    color: '#eeecdf',\r\n    height: 'min-content',\r\n    padding: '10px',\r\n    marginBottom: theme.spacing(2),\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    '& h3': {\r\n      alignSelf: 'center',\r\n      width: '100%',\r\n      margin: '0 0 10px 0',\r\n      textDecoration: (props) => props.isFinished && ' line-through 2px #274e6c',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      '& h3': {\r\n        fontSize: '16px',\r\n      },\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '80% ',\r\n      '& h3': {\r\n        fontSize: '18px',\r\n      },\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '45% ',\r\n    },\r\n  },\r\n  buttonsHolder: {\r\n    width: 'max-content',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  mainSection: {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    maxWidth: '75%',\r\n    '& h4': {\r\n      margin: 0,\r\n      fontSize: 14,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ToDoCard = (props) => {\r\n  const [isFinished, setIsFinished] = useState(props.isFinished);\r\n  let date = new Date(props.date);\r\n  date = `${date.toLocaleString('default', { month: 'long' })} ${date.getDate()}, ${date.getFullYear()}`;\r\n\r\n  const classes = toDoCardStyle({ isFinished });\r\n  return (\r\n    <Card classes={{ root: classes.card }}>\r\n      <div className={classes.mainSection}>\r\n        <h3>{props.message}</h3>\r\n        <h4>Due date: {date}</h4>\r\n      </div>\r\n\r\n      <div className={classes.buttonsHolder}>\r\n        <IconButton\r\n          onClick={() => {\r\n            props.handleFinishToDo();\r\n            setIsFinished(!isFinished);\r\n          }}\r\n        >\r\n          {isFinished ? <Replay color=\"secondary\" /> : <Check color=\"secondary\" />}\r\n        </IconButton>\r\n        <IconButton onClick={props.handleDeleteToDo}>\r\n          <Delete color=\"secondary\" />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ToDoCard;\r\n","import { Button, Dialog, DialogTitle, IconButton, makeStyles, TextField } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React from 'react';\r\n\r\nconst dialogStyle = makeStyles((theme) => ({\r\n  dialog: {\r\n    textAlign: 'center',\r\n    padding: 18,\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'colum',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: 'max-content',\r\n      minWidth: '90%',\r\n    },\r\n    [theme.breakpoints.up('xs')]: {\r\n      minWidth: '25%',\r\n      height: 'max-content',\r\n    },\r\n  },\r\n  dialogHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  buttonRoot: {\r\n    color: 'white',\r\n    width: '70%',\r\n    margin: 'auto',\r\n    marginTop: '50px !important',\r\n\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '90%',\r\n    },\r\n  },\r\n  message: {\r\n    width: '90%',\r\n    marginBottom: 20,\r\n  },\r\n  datePicker: {\r\n    width: '90%',\r\n  },\r\n}));\r\n\r\nconst addToDoDialog = (props) => {\r\n  const classes = dialogStyle();\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleCloseDialog} classes={{ paper: classes.dialog }}>\r\n      <div className={classes.dialogHeader}>\r\n        <DialogTitle>Add New To Do</DialogTitle>\r\n        <IconButton onClick={props.handleCloseDialog}>\r\n          <Close color=\"primary\" />\r\n        </IconButton>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          className={classes.message}\r\n          id=\"standard-basic\"\r\n          label=\"ToDo\"\r\n          multiline\r\n          value={props.toDoMessage}\r\n          onChange={props.handleToDoMessageChange}\r\n          rowsMax={2}\r\n        />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.datePicker}\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Date\"\r\n            value={props.selectedDate}\r\n            onChange={props.handleDateChange}\r\n            format=\"MM/dd/yyyy\"\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        classes={{ root: classes.buttonRoot }}\r\n        onClick={props.handleAddToDo}\r\n        disabled={!props.toDoMessage}\r\n      >\r\n        Add\r\n      </Button>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default addToDoDialog;\r\n","import { Card, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst noDataStyle = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: '#274e6c',\r\n    color: '#eeecdf',\r\n    margin: 'auto',\r\n    fontSize: 20,\r\n    '& h4': {\r\n      textAlign: 'center',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '50%',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '30%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst noDataFound = (props) => {\r\n  const classes = noDataStyle();\r\n\r\n  return (\r\n    <Card classes={{ root: classes.card }}>\r\n      <h4>You have nothing todo</h4>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default noDataFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ToDoCard from '../../components/ToDoCard/ToDoCard';\r\nimport axios from '../../axios';\r\nimport { Fab, makeStyles } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AddToDoDialog from '../../components/AddToDoDialog/AddToDoDialog';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport NoDataFound from '../../components/NoDataFound/NoDataFound';\r\n\r\nconst toDoListStyle = makeStyles((theme) => ({\r\n  toDoList: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    top: '2%',\r\n    marginBottom: '3em',\r\n    color: '#274e6c',\r\n    textAlign: 'center',\r\n  },\r\n  fabButton: {\r\n    position: 'fixed',\r\n    bottom: '5%',\r\n    right: theme.spacing(2),\r\n    backgroundColor: '#de7a22',\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: '15%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ToDoList = (props) => {\r\n  const classes = toDoListStyle();\r\n  const [toDoList, setTodoList] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [toDoMessage, setToDoMessage] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let toDos;\r\n\r\n  //ez hack majd kitalálok valamit ne így keljen mert undorító megoldás, lehet valami rxjs megoldás lesz belőle\r\n  const [isChanged, setIsChanged] = useState(false);\r\n\r\n  const fetchToDoList = async () => {\r\n    await axios\r\n      .get('/todo')\r\n      .then((res) => {\r\n        setTodoList(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchToDoList();\r\n  }, [isChanged]);\r\n\r\n  const handleDeleteToDo = (id) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .delete('/todo/' + id)\r\n      .then(() => {\r\n        setIsChanged(!isChanged);\r\n      })\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleFinishToDo = (id, isFinished) => {\r\n    const toDo = {\r\n      isFinished: !isFinished,\r\n    };\r\n    axios\r\n      .put('/todo/' + id, toDo)\r\n      .then((toDoList.find((todo) => todo._id === id).isFinished = !isFinished))\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleAddToDo = () => {\r\n    const toDo = {\r\n      date: selectedDate ? selectedDate : new Date(),\r\n      isFinished: false,\r\n      message: toDoMessage,\r\n    };\r\n    axios\r\n      .post('/todo', toDo)\r\n      .then(() => {\r\n        handleCloseDialog();\r\n        setIsChanged(!isChanged);\r\n        setIsLoading(true);\r\n        cleanDialog();\r\n      })\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleToDoMessageChange = (event) => {\r\n    setToDoMessage(event.target.value);\r\n  };\r\n\r\n  const cleanDialog = () => {\r\n    setToDoMessage();\r\n    setSelectedDate();\r\n  };\r\n\r\n  if (isLoading === true) {\r\n    toDos = <LoadingSpinner text=\"Your ToDos Are On The Way\" />;\r\n  } else if (isLoading === false && toDoList.length === 0) {\r\n    toDos = <NoDataFound />;\r\n  } else {\r\n    toDos = toDoList.map((todo) => (\r\n      <ToDoCard\r\n        key={todo._id}\r\n        message={todo.message}\r\n        isFinished={todo.isFinished}\r\n        date={todo.date}\r\n        handleDeleteToDo={() => handleDeleteToDo(todo._id)}\r\n        handleFinishToDo={() => handleFinishToDo(todo._id, todo.isFinished)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.toDoList}>\r\n      <h1 className={classes.header}>All Tasks</h1>\r\n      {toDos}\r\n      <Fab color=\"primary\" classes={{ root: classes.fabButton }} onClick={handleOpenDialog}>\r\n        <Add />\r\n      </Fab>\r\n      <AddToDoDialog\r\n        handleCloseDialog={handleCloseDialog}\r\n        handleDateChange={handleDateChange}\r\n        handleToDoMessageChange={(event) => handleToDoMessageChange(event)}\r\n        handleAddToDo={handleAddToDo}\r\n        open={open}\r\n        toDoMessage={toDoMessage}\r\n        selectedDate={selectedDate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"sourceRoot":""}