{"version":3,"sources":["components/IconButton/IconButton.js","components/ToDoCard/ToDoCard.js","axios.js","components/Dialogs/AddToDoDialog/AddToDoDialog.js","components/LoadingSpinner/LoadingSpinner.js","components/NoDataFound/NoDataFound.js","containers/ToDoList/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["iconButton","props","IconButton","onClick","Icon","classes","root","iconName","toDoCard","Card","text","className","handleFinishToDo","handleDeleteToDo","instance","axios","create","baseURL","addToDoDialog","Dialog","open","onClose","handleCloseDialog","paper","DialogTitle","Close","TextField","id","label","multiline","value","toDoMessage","onChange","handleToDoMessageChange","rowsMax","utils","DateFnsUtils","margin","selectedDate","handleDateChange","format","Button","handleAddToDo","disabled","loadingSpinner","noDataFound","ToDoList","toDos","useState","toDoList","setTodoList","setOpen","Date","setSelectedDate","setToDoMessage","isLoading","setIsLoading","isChanged","setIsChanged","fetchToDoList","a","get","then","res","data","catch","error","console","useEffect","cleanDialog","length","map","todo","_id","delete","log","isFinished","toDo","put","find","Fab","Add","date","event","target","post","withRouter","routes","path","exact","component","to","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2aAUeA,G,OANI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAYC,QAASF,EAAME,QAA3B,SACE,cAACC,EAAA,EAAD,CAAMC,QAAS,CAAEC,KAAM,QAAvB,SAAkCL,EAAMM,eCS7BC,G,OAVE,SAACP,GAAD,OACf,eAACQ,EAAA,EAAD,CAAMJ,QAAS,CAAEC,KAAM,aAAvB,UACE,+BAAKL,EAAMS,KAAX,OACA,sBAAKC,UAAU,oBAAf,UACE,cAAC,EAAD,CAAYJ,SAAS,QAAQJ,QAASF,EAAMW,mBAC5C,cAAC,EAAD,CAAYL,SAAS,SAASJ,QAASF,EAAMY,2B,iBCJpCC,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,yC,wFC2CIC,G,OAvCO,SAACjB,GAAD,OACpB,eAACkB,EAAA,EAAD,CAAQC,KAAMnB,EAAMmB,KAAMC,QAASpB,EAAMqB,kBAAmBjB,QAAS,CAAEkB,MAAO,oBAA9E,UACE,sBAAKZ,UAAU,0BAAf,UACE,cAACa,EAAA,EAAD,CAAab,UAAU,8BAAvB,2BACA,cAACT,EAAA,EAAD,CAAYC,QAASF,EAAMqB,kBAA3B,SACE,cAACG,EAAA,EAAD,CAAOpB,QAAS,CAAEC,KAAM,sCAG5B,sBAAKK,UAAU,0BAAf,UACE,cAACe,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNC,WAAS,EACTC,MAAO7B,EAAM8B,YACbC,SAAU/B,EAAMgC,wBAChBC,QAAS,EACT7B,QAAS,CAAEC,KAAM,6BAEnB,cAAC,IAAD,CAAyB6B,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEzB,UAAU,yBACV0B,OAAO,SACPV,GAAG,qBACHC,MAAM,qBACNE,MAAO7B,EAAMqC,aACbN,SAAU/B,EAAMsC,iBAChBC,OAAO,oBAIb,cAACC,EAAA,EAAD,CACEpC,QAAS,CAAEC,KAAM,oBACjBH,QAASF,EAAMyC,cACfC,UAAW1C,EAAM8B,YAHnB,sBC1BWa,G,OAPQ,SAAC3C,GAAD,OACrB,eAACQ,EAAA,EAAD,CAAMJ,QAAS,CAAEC,KAAM,kBAAvB,UACE,2DACA,qBAAKK,UAAU,UAAf,6BCGWkC,G,OANK,SAAC5C,GAAD,OAClB,cAACQ,EAAA,EAAD,CAAMJ,QAAS,CAAEC,KAAM,iBAAvB,SACE,2DC8HWwC,EA1HE,SAAC7C,GAAW,IAMvB8C,EANsB,EACMC,mBAAS,IADf,mBACnBC,EADmB,KACTC,EADS,OAEFF,oBAAS,GAFP,mBAEnB5B,EAFmB,KAEb+B,EAFa,OAGcH,mBAAS,IAAII,MAH3B,mBAGnBd,EAHmB,KAGLe,EAHK,OAIYL,qBAJZ,mBAInBjB,EAJmB,KAINuB,EAJM,OAKQN,oBAAS,GALjB,mBAKnBO,EALmB,KAKRC,EALQ,OASQR,oBAAS,GATjB,mBASnBS,EATmB,KASRC,EATQ,KAWpBC,EAAa,uCAAG,sBAAAC,EAAA,sEACd7C,EACH8C,IAAI,SACJC,MAAK,SAACC,GACLb,EAAYa,EAAIC,MAChBR,GAAa,MAEdS,OAAM,SAACC,GACNC,QAAQD,MAAMA,MARE,2CAAH,qDAYnBE,qBAAU,WACRT,MACC,CAACF,IAEJ,IA2CMnC,EAAoB,WACxB6B,GAAQ,IAWJkB,EAAc,WAClBf,IACAD,KAkBF,OAdEN,GADgB,IAAdQ,EACM,cAAC,EAAD,KACe,IAAdA,GAA2C,IAApBN,EAASqB,OACjC,cAAC,EAAD,IAEArB,EAASsB,KAAI,SAACC,GAAD,OACnB,cAAC,EAAD,CAEE9D,KAAM8D,EAAK9D,KACXG,iBAAkB,kBArEEc,EAqEqB6C,EAAKC,IApElDjB,GAAa,QACbzC,EACG2D,OAAO,SAAW/C,GAClBmC,MAAK,WACJJ,GAAcD,MAEfQ,OAAM,SAACC,GAAD,OAAWC,QAAQQ,IAAI,cAAeT,MAPxB,IAACvC,GAsEpBf,iBAAkB,kBA5DC,SAACe,EAAIiD,GAC5BT,QAAQQ,IAAI1B,GACZ,IAAM4B,EAAO,CACXD,YAAaA,GAEf7D,EACG+D,IAAI,SAAWnD,EAAIkD,GACnBf,KAAMb,EAAS8B,MAAK,SAACP,GAAD,OAAUA,EAAKC,MAAQ9C,KAAIiD,YAAcA,GAC7DX,OAAM,SAACC,GAAD,OAAWC,QAAQQ,IAAI,cAAeT,MAoDnBtD,CAAiB4D,EAAKC,IAAKD,EAAKI,cAHnDJ,EAAKC,QASd,sBAAK9D,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAd,wBACA,qBAAKA,UAAU,YAAf,SAA4BoC,IAC5B,cAACiC,EAAA,EAAD,CAAK3E,QAAS,CAAEC,KAAM,YAAcH,QAxCf,WACvBgD,GAAQ,IAuCN,SACE,cAAC8B,EAAA,EAAD,MAEF,cAAC,EAAD,CACE3D,kBAAmBA,EACnBiB,iBArCmB,SAAC2C,GACxB7B,EAAgB6B,IAqCZjD,wBAAyB,SAACkD,GAAD,OAlCC,SAACA,GAC/B7B,EAAe6B,EAAMC,OAAOtD,OAiCYG,CAAwBkD,IAC5DzC,cAjEgB,WACpByB,QAAQQ,IAAIrC,GACZ,IAAMuC,EAAO,CACXK,KAAM5C,GAA8B,IAAIc,KACxCwB,YAAY,EACZlE,KAAMqB,GAERhB,EACGsE,KAAK,QAASR,GACdf,MAAK,WACJxC,IACAoC,GAAcD,GACdD,GAAa,GACba,OAEDJ,OAAM,SAACC,GAAD,OAAWC,QAAQQ,IAAI,cAAeT,OAmD3C9C,KAAMA,EACNW,YAAaA,EACbO,aAAcA,QC/GPgD,mBAVf,WACE,IAAIC,EACF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5C,IACjC,cAAC,IAAD,CAAU6C,GAAG,SAGjB,OAAO,cAAC,WAAD,CAAUC,SAAU,2CAApB,SAAwCL,OCAlCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1811b00d.chunk.js","sourcesContent":["import { Icon, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './IconButton.scss';\r\n\r\nconst iconButton = (props) => (\r\n  <IconButton onClick={props.onClick}>\r\n    <Icon classes={{ root: 'icon' }}>{props.iconName}</Icon>\r\n  </IconButton>\r\n);\r\n\r\nexport default iconButton;\r\n","import { Card, Icon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport IconButton from '../IconButton/IconButton';\r\nimport './ToDoCard.scss';\r\n\r\nconst toDoCard = (props) => (\r\n  <Card classes={{ root: 'todo-card' }}>\r\n    <h3>{props.text} </h3>\r\n    <div className=\"todo-card-buttons\">\r\n      <IconButton iconName=\"check\" onClick={props.handleFinishToDo} />\r\n      <IconButton iconName=\"delete\" onClick={props.handleDeleteToDo} />\r\n    </div>\r\n  </Card>\r\n);\r\n\r\nexport default toDoCard;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://to-do-server1.herokuapp.com/',\r\n});\r\n\r\nexport default instance;\r\n","import { Button, Dialog, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React from 'react';\r\nimport './AddToDoDialog.scss';\r\n\r\nconst addToDoDialog = (props) => (\r\n  <Dialog open={props.open} onClose={props.handleCloseDialog} classes={{ paper: 'add-to-do-dialog' }}>\r\n    <div className=\"add-to-do-dialog-header\">\r\n      <DialogTitle className=\"add-to-do-dialog-main-color\">Add New To Do</DialogTitle>\r\n      <IconButton onClick={props.handleCloseDialog}>\r\n        <Close classes={{ root: 'add-to-do-dialog-main-color' }} />\r\n      </IconButton>\r\n    </div>\r\n    <div className=\"add-to-do-dialog-inputs\">\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"ToDo \"\r\n        multiline\r\n        value={props.toDoMessage}\r\n        onChange={props.handleToDoMessageChange}\r\n        rowsMax={2}\r\n        classes={{ root: 'add-to-do-message-input' }}\r\n      />\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          className=\"add-to-dot-date-picker\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          value={props.selectedDate}\r\n          onChange={props.handleDateChange}\r\n          format=\"MM/dd/yyyy\"\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n    <Button\r\n      classes={{ root: 'add-to-do-button' }}\r\n      onClick={props.handleAddToDo}\r\n      disabled={!props.toDoMessage}\r\n    >\r\n      Add\r\n    </Button>\r\n  </Dialog>\r\n);\r\nexport default addToDoDialog;\r\n","import { Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './LoadingSpinner.scss';\r\n\r\nconst loadingSpinner = (props) => (\r\n  <Card classes={{ root: 'spinner-holder' }}>\r\n    <h1>Your ToDos Are On The Way</h1>\r\n    <div className=\"spinner\">Loading...</div>\r\n  </Card>\r\n);\r\n\r\nexport default loadingSpinner;\r\n","import { Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './NoDataFound.scss';\r\n\r\nconst noDataFound = (props) => (\r\n  <Card classes={{ root: 'no-data-found' }}>\r\n    <h4>You have nothing todo</h4>\r\n  </Card>\r\n);\r\n\r\nexport default noDataFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ToDoCard from '../../components/ToDoCard/ToDoCard';\r\nimport './ToDoList.scss';\r\nimport axios from '../../axios';\r\nimport { Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AddToDoDialog from '../../components/Dialogs/AddToDoDialog/AddToDoDialog';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport NoDataFound from '../../components/NoDataFound/NoDataFound';\r\n\r\nconst ToDoList = (props) => {\r\n  const [toDoList, setTodoList] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [toDoMessage, setToDoMessage] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let toDos;\r\n\r\n  //ez hack majd kitalálok valamit ne így keljen mert undorító megoldás, lehet valami rxjs megoldás lesz belőle\r\n  const [isChanged, setIsChanged] = useState(false);\r\n\r\n  const fetchToDoList = async () => {\r\n    await axios\r\n      .get('/todo')\r\n      .then((res) => {\r\n        setTodoList(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchToDoList();\r\n  }, [isChanged]);\r\n\r\n  const handleDeleteToDo = (id) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .delete('/todo/' + id)\r\n      .then(() => {\r\n        setIsChanged(!isChanged);\r\n      })\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleFinishToDo = (id, isFinished) => {\r\n    console.log(toDoList);\r\n    const toDo = {\r\n      isFinished: !isFinished,\r\n    };\r\n    axios\r\n      .put('/todo/' + id, toDo)\r\n      .then((toDoList.find((todo) => todo._id === id).isFinished = !isFinished))\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleAddToDo = () => {\r\n    console.log(selectedDate);\r\n    const toDo = {\r\n      date: selectedDate ? selectedDate : new Date(),\r\n      isFinished: false,\r\n      text: toDoMessage,\r\n    };\r\n    axios\r\n      .post('/todo', toDo)\r\n      .then(() => {\r\n        handleCloseDialog();\r\n        setIsChanged(!isChanged);\r\n        setIsLoading(true);\r\n        cleanDialog();\r\n      })\r\n      .catch((error) => console.log('valami hiba', error));\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleToDoMessageChange = (event) => {\r\n    setToDoMessage(event.target.value);\r\n  };\r\n\r\n  const cleanDialog = () => {\r\n    setToDoMessage();\r\n    setSelectedDate();\r\n  };\r\n\r\n  if (isLoading === true) {\r\n    toDos = <LoadingSpinner />;\r\n  } else if (isLoading === false && toDoList.length === 0) {\r\n    toDos = <NoDataFound />;\r\n  } else {\r\n    toDos = toDoList.map((todo) => (\r\n      <ToDoCard\r\n        key={todo._id}\r\n        text={todo.text}\r\n        handleDeleteToDo={() => handleDeleteToDo(todo._id)}\r\n        handleFinishToDo={() => handleFinishToDo(todo._id, todo.isFinished)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-list-page\">\r\n      <h1 className=\"todo-list-header\"> All Tasks</h1>\r\n      <div className=\"todo-list\">{toDos}</div>\r\n      <Fab classes={{ root: 'todo-fab' }} onClick={handleOpenDialog}>\r\n        <Add />\r\n      </Fab>\r\n      <AddToDoDialog\r\n        handleCloseDialog={handleCloseDialog}\r\n        handleDateChange={handleDateChange}\r\n        handleToDoMessageChange={(event) => handleToDoMessageChange(event)}\r\n        handleAddToDo={handleAddToDo}\r\n        open={open}\r\n        toDoMessage={toDoMessage}\r\n        selectedDate={selectedDate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import './App.scss';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport ToDoList from './containers/ToDoList/ToDoList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction App() {\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={ToDoList}></Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n  return <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>;\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}